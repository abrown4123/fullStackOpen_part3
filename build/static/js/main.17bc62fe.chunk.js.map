{"version":3,"sources":["components/People.js","components/Search.js","components/AddPerson.js","services/numbers.js","components/Notification.js","App.js","index.js"],"names":["People","props","style","display","padding","margin","name","number","onClick","remove","Search","searchName","handleSearch","value","onChange","AddPerson","onSubmit","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","baseURL","axios","get","then","response","data","newEntry","post","id","updatedEntry","put","delete","Notification","message","context","className","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchName","addedNotification","setAddedNotification","notificationContext","setNotificationContext","duplicatePeople","find","person","peopleToShow","filter","toLowerCase","includes","useEffect","numberService","initialNumbers","event","target","preventDefault","window","confirm","changedNumber","returnedNumber","map","updateNumber","concat","setTimeout","catch","error","console","log","deletedPerson","deleteNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17bc62fe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst People = (props) => {\r\n  return (\r\n    <div>\r\n      <p style={{display:\"inline-block\", padding: \".5em\", margin: 0}}>{props.name}: {props.number}</p>\r\n      <button onClick={props.remove}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default People","import React from 'react'\r\n\r\nconst Search = ({ searchName, handleSearch }) => {\r\n    return (\r\n        <>\r\n        <h3>Search</h3>\r\n        <div>\r\n            search: <input\r\n            value={searchName}\r\n            onChange={handleSearch}\r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\n\r\nconst AddPerson = (props) => {\r\n    return (\r\n        <>\r\n        <h3>add a new</h3>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            name: <input \r\n                value={props.newName}\r\n                onChange={props.handleNameChange}\r\n            />\r\n            number: <input\r\n                value={props.newNumber}\r\n                onChange={props.handleNumberChange}\r\n            />\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPerson","import axios from 'axios';\r\n\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = newEntry => {\r\n  const request = axios.post(baseURL, newEntry);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, updatedEntry) => {\r\n  const request = axios.put(`${baseURL}/${id}`, updatedEntry);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst removeNumber = id => {\r\n  const request = axios.delete(`${baseURL}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, update, removeNumber };\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, context }) => {\r\n  let style = context ? \"positiveMessage\" : \"negativeMessage\"; \r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={style}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport People from './components/People'\nimport Search from './components/Search'\nimport AddPerson from './components/AddPerson'\nimport numberService from './services/numbers'\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ searchName, setSearchName ] = useState('');\n  const [ addedNotification, setAddedNotification ] = useState(null);\n  const [ notificationContext, setNotificationContext] = useState(null);\n  \n  const checkName = person => person.name === newName;\n  const duplicatePeople = persons.find(checkName);\n  const peopleToShow = searchName \n    ? persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase()))\n    : persons\n\n  const hook = () => {\n    numberService\n      .getAll()\n      .then(initialNumbers => {\n        setPersons(initialNumbers);\n      })\n  }\n\n  useEffect(hook, []);\n\n  const deleteNumber = deletedPerson => {\n    let {name, id} = deletedPerson;\n    if (window.confirm(\"Are you sure you would like to delete this number?\")){\n      numberService\n        .removeNumber(id)\n        .then(response=> {\n          console.log(response, \"has been removed from db\");\n          setPersons(persons.filter(person => person.id !== id));\n        })\n        .catch(error => {\n          setAddedNotification(`Information of ${name} has already been removed from server`);\n          setTimeout(() => {\n            setAddedNotification(null);\n          }, 5000)\n        })\n    }\n  }\n\n  const updateNumber = () => {\n    if (window.confirm(`${duplicatePeople.name} already exists. Would you like to update their number?`)) {\n      const id = duplicatePeople.id //creating this to not have to iterate duplicatePeople each time\n      const changedNumber = { ...duplicatePeople, number: newNumber}\n\n      numberService\n        .update(id, changedNumber)\n        .then(returnedNumber => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedNumber))\n          setNewName('')\n          setNewNumber('');\n        })\n    }\n  }\n\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (duplicatePeople) {\n      return updateNumber();\n    }\n\n    const newEntry = {\n      name: newName,\n      number: newNumber\n    }\n\n    numberService\n      .create(newEntry)\n      .then(returnedNumber => {\n        setPersons(persons.concat(returnedNumber));\n        setNewName('');\n        setNewNumber('');\n        setNotificationContext(true);\n        setAddedNotification(`Added ${newName}`);\n        setTimeout(() => {\n          setNotificationContext(null);\n          setAddedNotification(null);\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(\"Number creation failed\")\n      })\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleSearch = event => {\n    setSearchName(event.target.value);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={addedNotification} context={notificationContext} />\n      <Search searchName={searchName} handleSearch={handleSearch} />\n      <AddPerson \n        handleSubmit={handleSubmit}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      {peopleToShow.map(person => \n        <People \n          key={person.id}\n          name={person.name} \n          number={person.number} \n          remove={() => deleteNumber(person)}/>\n      )}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}